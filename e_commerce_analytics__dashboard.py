# -*- coding: utf-8 -*-
"""E-Commerce_Analytics _Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JjeNTRikWKCyRUNsnlEZ8xoQ2luihg9L
"""

import pandas as pd
import gdown
import dash
import plotly.express as px
from dash import Dash, html, dcc

url='https://drive.google.com/file/d/1iaJPaGfKGJUcBuxtw9_9XxCv2UxlbyrN/view?usp=drive_link'


# Extração do arquivo pela URL
file_id = url.split('/')[-2]

# Download do arquivo
output_file = 'ecommerce_estatistica.csv'  # Nome do arquivo
gdown.download(id=file_id, output=output_file, quiet=False)

#Criação da função
def create_graphics(df):
  #Grafico 1

  #Histograma
  fig1 = px.histogram(df, x='Preço', nbins=30, title='Histograma Preço', color_discrete_sequence=['blue'])
  fig1.update_layout(
      xaxis_title='Preço',
      yaxis_title='Frequência'
  )

  #Grafico 2

  #Dispersão
  fig2 = px.scatter(df, x = 'Preço', y = 'Qtd_Vendidos_Cod', color = 'Gênero', hover_data=['Temporada'])
  fig2.update_layout(
      title='Dispersão Preço vs Qtd_Vendidos por Gênero',
      xaxis_title='Preço',
      yaxis_title='Quantidade de Vendidos'
  )

  #Grafico 3

  #Bolha
  fig3 = px.scatter(df, x='Preço', y='Qtd_Vendidos_Cod', color='Temporada', size='Qtd_Vendidos_Cod', hover_data=['Temporada'])
  fig3.update_layout(
      title='Dispersão Preço vs Qtd_Vendidos por Temporada',
      xaxis_title='Preço',
      yaxis_title='Quantidade de Vendidos',
      legend_title='Temporada'
  )

  #Grafico 4

  #Barras
  fig4 = px.bar(df, x='Temporada', y='Qtd_Vendidos_Cod', color='Temporada', title='Quantidade de Produtos Vendidos por Temporada')
  fig4.update_layout(
      xaxis_title='Temporada',
      yaxis_title='Quantidade de Produtos Vendidos',
      legend_title='Temporada',
      plot_bgcolor='rgba(222, 255, 253, 1)',
      paper_bgcolor='rgba(186, 245, 241, 1)'
  )

  #Grafico 5

  #Pizza
  fig5 = px.pie(df, names='Temporada', title='Proporção de Produtos por temporada', color= 'Temporada')
  fig5.update_traces(textposition='inside', textinfo='percent+label')


  #Grafico 6

  #3D
  fig6 = px.scatter_3d(df, x='Preço', y = 'Qtd_Vendidos_Cod', z= 'Gênero', color='Gênero')
  fig6.update_layout(
      title='Dispersão Preço vs Qtd_Vendidos por Gênero',
      xaxis_title='Preço',
      yaxis_title='Quantidade de Vendidos',
      legend_title='Gênero'
  )

  #Grafico 7

  #Linha
  fig7 = px.line(df, x='Preço', y='Qtd_Vendidos_Cod', color='Gênero', title='Quantidade de Produtos Vendidos por Gênero')
  fig7.update_layout(
      xaxis_title='Preço',
      yaxis_title='Quantidade de Produtos Vendidos',
      legend_title='Gênero',
      plot_bgcolor='black',
      paper_bgcolor='white'
  )
  return fig1, fig2, fig3, fig4, fig5, fig6, fig7

#Criação do app
def create_app(df):
  app = dash.Dash(__name__)
  fig1, fig2, fig3, fig4, fig5, fig6, fig7 = create_graphics(df)
  app.layout = html.Div([
      dcc.Graph(id='graphic1', figure=fig1),
      dcc.Graph(id='graphic2', figure=fig2),
      dcc.Graph(id='graphic3', figure=fig3),
      dcc.Graph(id='graphic4', figure=fig4),
      dcc.Graph(id='graphic5', figure=fig5),
      dcc.Graph(id='graphic6', figure=fig6),
      dcc.Graph(id='graphic7', figure=fig7)
  ])
  return app

# Leitura do arquvio CSV usando pandas
df = pd.read_csv(output_file)

if __name__ == '__main__':
#Executa o App
  app = create_app(df)
  app.run(debug=True)